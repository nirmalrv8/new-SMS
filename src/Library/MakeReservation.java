/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author LuCif3R
 */
public class MakeReservation extends javax.swing.JFrame {

    /**
     * Creates new form MakeReservation
     */
    int xmouse;
    int ymouse;
    public MakeReservation() {
        initComponents();
       BorrowerID.setText(null);
       
       ISBN.setText(null);
       changer();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) resdate.getDateEditor();
        editor.setEditable(false);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BorrowerID = new javax.swing.JTextField();
        ISBN = new javax.swing.JTextField();
        noofbooks = new javax.swing.JComboBox<>();
        resdate = new com.toedter.calendar.JDateChooser();
        reserve = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        BorrowerID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BorrowerIDFocusLost(evt);
            }
        });
        BorrowerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BorrowerIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BorrowerIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BorrowerIDKeyTyped(evt);
            }
        });
        getContentPane().add(BorrowerID);
        BorrowerID.setBounds(330, 140, 240, 28);

        ISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISBNKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISBNKeyReleased(evt);
            }
        });
        getContentPane().add(ISBN);
        ISBN.setBounds(330, 100, 240, 28);

        noofbooks.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2" }));
        noofbooks.setName(""); // NOI18N
        noofbooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noofbooksActionPerformed(evt);
            }
        });
        getContentPane().add(noofbooks);
        noofbooks.setBounds(330, 190, 90, 26);
        getContentPane().add(resdate);
        resdate.setBounds(330, 60, 240, 28);

        reserve.setText("Reserve ");
        reserve.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                reserveItemStateChanged(evt);
            }
        });
        reserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveActionPerformed(evt);
            }
        });
        getContentPane().add(reserve);
        reserve.setBounds(330, 240, 120, 28);

        jLabel3.setText("Borrower Id");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(190, 140, 80, 16);

        jLabel2.setText("Number Of Books");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(190, 190, 110, 16);

        jLabel4.setText("ISBN");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(190, 100, 80, 16);

        jLabel5.setText("Reserved Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(190, 60, 90, 16);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -30, 730, 520);

        setSize(new java.awt.Dimension(736, 504));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void noofbooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noofbooksActionPerformed
        changer();
        //System.out.println("dasdsd");
    }//GEN-LAST:event_noofbooksActionPerformed

    private void reserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveActionPerformed
       
        String sBorrowerID = this.BorrowerID.getText();
        String sISBN = this.ISBN.getText();
        int ISBN = Integer.parseInt(sISBN);
          String stringno =   noofbooks.getSelectedItem().toString();
          int selectedno = Integer.parseInt(stringno);
        System.out.println(selectedno);

        JTextField dat=(JTextField)this.resdate.getDateEditor().getUiComponent();
         
          String resdate = dat.getText();
          PreparedStatement ps1,ps2,ps3;
          Connection con = DBconnect.connect();         
          String name = null,Bname = null;
          int quntity = 0,count=0;
            Book b1 = new Book();
            
            
          try {
         
          String sql1 = "Select name from student where regNum="+sBorrowerID;
          ps1= con.prepareStatement(sql1);
          ResultSet rs = ps1.executeQuery();
          String sql5 = "SELECT *  from book_reservation where BorrowerId = '"+sBorrowerID+"'";
         System.out.println(count);
          ps3 =con.prepareStatement(sql5);
            ResultSet rs1 = ps3.executeQuery();
              while(rs1.next()){
              count++; 
              System.out.println(count);
            }
              System.out.println(count);
      
      
          String sql2 = "Select Name ,Available_amount from book_details where ISBN ="+ISBN;   
          ps2 = con.prepareStatement(sql2);
                       ResultSet rs2 = ps2.executeQuery();
          if(rs.absolute(1)&&rs2.absolute(1)) {                  
                  name=rs.getString("name");
                  Bname=rs2.getString("Name");
                  quntity =rs2.getInt("Available_amount");
                  quntity = quntity - selectedno;
                          if(count<2){
                   b1.makereservation(sBorrowerID, name, ISBN, Bname, resdate,quntity,selectedno);
                     setnll();
                          }else{
//               
                       JOptionPane.showMessageDialog(null,name+" made maxximum no of Reservations Sorry!");
                         }
              }else if(!rs.absolute(1)&&!rs2.absolute(1)){
                   
                  JOptionPane.showMessageDialog(null,"Invalid Student ID and ISBN");
                }else if(!rs2.absolute(1)){
                  JOptionPane.showMessageDialog(null,"Invalid ISBN");
                } else if(!rs.absolute(1)){
                    JOptionPane.showMessageDialog(null,"Invalid  Student ID");
                }
//           }

             
             
        } catch (SQLException e) {
              System.out.println(e);
        }
         
          
          
          
       
          
          
    }//GEN-LAST:event_reserveActionPerformed

    private void BorrowerIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BorrowerIDKeyReleased
        //changer(); 
        
    }//GEN-LAST:event_BorrowerIDKeyReleased

    private void BorrowerIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BorrowerIDKeyPressed
          char key = evt.getKeyChar();
        
        if ((key>=evt.VK_A || key >= evt.VK_Z) || (key == evt.VK_SPACE)|| (key >= evt.VK_NUMPAD0&& key <= evt.VK_NUMPAD9)||(key>=KeyEvent.VK_0&&key<=evt.VK_9) ||key == KeyEvent.VK_BACK_SPACE){
       
           BorrowerID.setEditable(true);
           BorrowerID.setBackground(Color.WHITE);
        }else
        {
            BorrowerID.setEditable(false);
            BorrowerID.setBackground(Color.red);
        }
     
    }//GEN-LAST:event_BorrowerIDKeyPressed

    private void BorrowerIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BorrowerIDKeyTyped
    changer();
    }//GEN-LAST:event_BorrowerIDKeyTyped

    private void ISBNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISBNKeyPressed
        int key = evt.getKeyCode();
        if((key>=KeyEvent.VK_0&&key<=evt.VK_9)||(key>=KeyEvent.VK_NUMPAD0 &&key<=evt.VK_NUMPAD9) ||key == KeyEvent.VK_BACK_SPACE){
        
           ISBN.setEditable(true);
           ISBN.setBackground(Color.WHITE);
        }else
        {
            ISBN.setEditable(false);
            ISBN.setBackground(Color.red);
        }
       
    }//GEN-LAST:event_ISBNKeyPressed
        
    private void ISBNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISBNKeyReleased
         changer();
    }//GEN-LAST:event_ISBNKeyReleased

    private void reserveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_reserveItemStateChanged
      
    }//GEN-LAST:event_reserveItemStateChanged

    private void BorrowerIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BorrowerIDFocusLost
       Connection con = DBconnect.connect();
        PreparedStatement ps3;
        
        int count =0;
                 String sBorrowerID = this.BorrowerID.getText();
                 System.out.println(sBorrowerID);
              String sql5 = "SELECT *  from book_reservation where BorrowerId = '"+sBorrowerID+"'";
         System.out.println(count);
            try {
                ps3 =con.prepareStatement(sql5);
            
            ResultSet rs1 = ps3.executeQuery();
              while(rs1.next()){
              count++; 
            
            }
                System.out.println("la");
                System.out.println(count);
                
             if(count<=1){
                   noofbooks.removeItemAt(2);
                   System.out.println("ooo");
                    reserve.setEnabled(true);
            }else if(count>=2){
                    noofbooks.setEditable(false);
                    JOptionPane.showMessageDialog(null,"You cannot reserve Books anymore");
                    reserve.setEnabled(false);
            }else
                 reserve.setEnabled(true);
              } catch (SQLException ex) {
                Logger.getLogger(MakeReservation.class.getName()).log(Level.SEVERE, null, ex);
            }
             changer();
        System.out.println("dasdsd");
    }//GEN-LAST:event_BorrowerIDFocusLost

    
     public void setnll(){
     
            ISBN.setText(null);
               BorrowerID.setText(null);
                resdate.setDate(null);
                     noofbooks.setSelectedIndex(0);
     } 
     public void changer(){
      JTextField pubd=(JTextField)this.resdate.getDateEditor().getUiComponent();
         String dat = pubd.getText();
         System.out.println("sdasdasdsd:"+dat);
      if (!ISBN.getText().isEmpty()&&!BorrowerID.getText().isEmpty()&&!dat.equalsIgnoreCase(null)&&noofbooks.getSelectedIndex()!=0){
             reserve.setEnabled(true);
           
         }
         else {
               reserve.setEnabled(false);
           
         }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BorrowerID;
    private javax.swing.JTextField ISBN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> noofbooks;
    private com.toedter.calendar.JDateChooser resdate;
    private javax.swing.JButton reserve;
    // End of variables declaration//GEN-END:variables
}
