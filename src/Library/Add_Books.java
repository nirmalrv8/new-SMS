/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JTextField;

/**
 *
 * @author LuCif3R
 */
public class Add_Books extends javax.swing.JFrame {

    /**
     * Creates new form Add_Books
     */
   
    public Add_Books() {
        initComponents();
      changer();
       JTextFieldDateEditor editor = (JTextFieldDateEditor) pubd.getDateEditor();
        editor.setEditable(false);
        
        
    }

    @Override
    protected void frameInit() {
        super.frameInit(); //To change body of generated methods, choose Tools | Templates.
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cat = new javax.swing.JTextField();
        ISBN = new javax.swing.JTextField();
        name1 = new javax.swing.JTextField();
        pages = new javax.swing.JTextField();
        qty = new javax.swing.JTextField();
        lang = new javax.swing.JTextField();
        pubd = new com.toedter.calendar.JDateChooser();
        pr = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(60, 161, 210));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("ISBN");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(110, 80, 80, 20);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(110, 120, 70, 20);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Pages");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(110, 320, 66, 19);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Quntity");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(110, 200, 66, 19);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Language");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(110, 240, 69, 19);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Price");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(110, 360, 110, 19);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Published date");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(110, 160, 110, 19);

        cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catActionPerformed(evt);
            }
        });
        cat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                catKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                catKeyReleased(evt);
            }
        });
        getContentPane().add(cat);
        cat.setBounds(250, 280, 154, 30);

        ISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ISBNKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ISBNKeyReleased(evt);
            }
        });
        getContentPane().add(ISBN);
        ISBN.setBounds(250, 70, 154, 30);

        name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name1ActionPerformed(evt);
            }
        });
        name1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                name1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name1KeyReleased(evt);
            }
        });
        getContentPane().add(name1);
        name1.setBounds(250, 120, 154, 30);

        pages.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pagesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pagesKeyReleased(evt);
            }
        });
        getContentPane().add(pages);
        pages.setBounds(250, 320, 154, 30);

        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyKeyReleased(evt);
            }
        });
        getContentPane().add(qty);
        qty.setBounds(250, 200, 154, 30);

        lang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                langKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                langKeyReleased(evt);
            }
        });
        getContentPane().add(lang);
        lang.setBounds(250, 240, 154, 30);

        pubd.setPreferredSize(new java.awt.Dimension(60, 28));
        pubd.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                pubdComponentAdded(evt);
            }
        });
        pubd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pubdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pubdFocusLost(evt);
            }
        });
        pubd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pubdMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pubdMouseEntered(evt);
            }
        });
        pubd.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                pubdInputMethodTextChanged(evt);
            }
        });
        pubd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pubdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pubdKeyTyped(evt);
            }
        });
        getContentPane().add(pubd);
        pubd.setBounds(250, 160, 150, 30);

        pr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prActionPerformed(evt);
            }
        });
        pr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                prKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prKeyReleased(evt);
            }
        });
        getContentPane().add(pr);
        pr.setBounds(250, 360, 154, 30);

        add.setText("Add Book");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(200, 430, 120, 40);

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Books");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 10, 490, 30);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Catagory");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(110, 280, 80, 19);

        jButton1.setText("Demo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(320, 480, 80, 23);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(60, 50, 370, 360);

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 490, 50);

        setSize(new java.awt.Dimension(502, 546));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catActionPerformed

    private void name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name1ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        int number = 0;
        String sbn = ISBN.getText();
        long ISBN = Long.parseLong(sbn);
        String name = name1.getText();
        String pagess = pages .getText();
        int pags = Integer.parseInt(pagess);
        String qun = qty.getText();
        int quntity = Integer.parseInt(qun);
        String lan = lang.getText();
        String cata = cat.getText();
        
        JTextField pubd=(JTextField)this.pubd.getDateEditor().getUiComponent();
         String date = pubd.getText();
        String pri =  pr.getText();
        double price = Double.parseDouble(pri);
        PreparedStatement pst;
        ResultSet rs = null;
        Connection con = DBconnect.connect();
        String temp =  null;
        int nwquntity = 0;
          
            Book b1 = new Book();
             b1.add_Book(ISBN, name, date , lan, cata, quntity, price, pags);
        
        try {
            pst = con.prepareStatement("Select Name from book_details where ISBN = "+ISBN);
           ResultSet res;
           res = pst.executeQuery();
           
            while (res.next()) {
                    
                temp = res.getString("Name");
                
                
                
            }
       
           
        } catch (SQLException ex) {
            Logger.getLogger(Add_Books.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //select available amounts from db
        try {
            String sql = "Select Available_amount , Quntity from book_details where ISBN = " +ISBN;
            pst = con.prepareStatement(sql);
           rs = pst.executeQuery();
            
            while(rs.next()){
                
                   
                    number = rs.getInt("Available_amount");
                    nwquntity=rs.getInt("Quntity");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Add_Books.class.getName()).log(Level.SEVERE, null, ex);
        }
         //calculate new quntity and available books
        number = number + quntity;
        quntity = quntity + nwquntity;
        if(temp == null ){
           
            
                    b1.stor_details();
                  JOptionPane.showMessageDialog(null, "Book Record stored" );
                     setnll();
        }else{
            int out=JOptionPane.showConfirmDialog(null,"You really want to update?");
                if(out==0){ 
                    
                    b1.update_book(ISBN, name, date, lan, cata, quntity, number, pags, price);
                }
           
            
           
         
            changer();

        }
    }//GEN-LAST:event_addActionPerformed

    private void prActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prActionPerformed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void ISBNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISBNKeyPressed
        int key = evt.getKeyCode();
        if((key>=KeyEvent.VK_0&&key<=evt.VK_9)||(key>=KeyEvent.VK_NUMPAD0 &&key<=evt.VK_NUMPAD9) ||key == KeyEvent.VK_BACK_SPACE||key==KeyEvent.VK_CONTROL||key == KeyEvent.VK_V){
        
           ISBN.setEditable(true);
           ISBN.setBackground(Color.WHITE);
        }else
        {
            ISBN.setEditable(false);
            ISBN.setBackground(Color.red);
        }
       
    }//GEN-LAST:event_ISBNKeyPressed

    private void name1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name1KeyPressed
        char key = evt.getKeyChar();
        
        if ((key>=evt.VK_A || key >= evt.VK_Z) || (key == evt.VK_SPACE)|| (key >= evt.VK_NUMPAD0&& key <= evt.VK_NUMPAD9)||(key>=KeyEvent.VK_0&&key<=evt.VK_9) ||key == KeyEvent.VK_BACK_SPACE){
       
           name1.setEditable(true);
           name1.setBackground(Color.WHITE);
        }else
        {
            name1.setEditable(false);
            name1.setBackground(Color.red);
        }
       
        
    }//GEN-LAST:event_name1KeyPressed

    private void pagesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagesKeyPressed
      int key = evt.getKeyCode();
        if((key>=KeyEvent.VK_0&&key<=evt.VK_9)||(key>=KeyEvent.VK_NUMPAD0 &&key<=evt.VK_NUMPAD9) ||key == KeyEvent.VK_BACK_SPACE){
        
           pages.setEditable(true);
           pages.setBackground(Color.WHITE);
        }else
        {
            pages.setEditable(false);
            pages.setBackground(Color.red);
        }
       
    }//GEN-LAST:event_pagesKeyPressed

    private void qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyPressed
       
      int key = evt.getKeyCode();
        if((key>=KeyEvent.VK_0&&key<=evt.VK_9)||(key>=KeyEvent.VK_NUMPAD0 &&key<=evt.VK_NUMPAD9) ||key == KeyEvent.VK_BACK_SPACE){
        
           qty.setEditable(true);
           qty.setBackground(Color.WHITE);
        }else
        {
            qty.setEditable(false);
            qty.setBackground(Color.red);
        }
        
    }//GEN-LAST:event_qtyKeyPressed

    private void langKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_langKeyPressed
      
                      char key = evt.getKeyChar();
        
        if ((key>=evt.VK_A || key >= evt.VK_Z) ||key == KeyEvent.VK_BACK_SPACE){
       
           lang.setEditable(true);
           lang.setBackground(Color.WHITE);
        }else
        {
            lang.setEditable(false);
            lang.setBackground(Color.red);
        }
        
    }//GEN-LAST:event_langKeyPressed

    private void catKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catKeyPressed
        
                
                      char key = evt.getKeyChar();
        
        if ((key>=evt.VK_A || key >= evt.VK_Z) || (key == evt.VK_SPACE)||key == KeyEvent.VK_BACK_SPACE){
       
           cat.setEditable(true);
           cat.setBackground(Color.WHITE);
        }else
        {
            cat.setEditable(false);
            cat.setBackground(Color.red);
        }
       
    }//GEN-LAST:event_catKeyPressed

    private void prKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prKeyPressed
       
                     int key = evt.getKeyCode();
        if((key>=KeyEvent.VK_0&&key<=evt.VK_9)||(key>=KeyEvent.VK_NUMPAD0 &&key<=evt.VK_NUMPAD9)||key==KeyEvent.VK_DECIMAL ||key == KeyEvent.VK_BACK_SPACE||key == '.'||key==evt.VK_PERIOD){
        
           pr.setEditable(true);
           pr.setBackground(Color.WHITE);
        }else
        {
            pr.setEditable(false);
            pr.setBackground(Color.red);
        }
        
    }//GEN-LAST:event_prKeyPressed

    private void ISBNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISBNKeyReleased
        changer();
    }//GEN-LAST:event_ISBNKeyReleased

    private void name1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name1KeyReleased
       changer();
    }//GEN-LAST:event_name1KeyReleased

    private void pagesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagesKeyReleased
        changer();
    }//GEN-LAST:event_pagesKeyReleased

    private void qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyReleased
       changer();
    }//GEN-LAST:event_qtyKeyReleased

    private void langKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_langKeyReleased
       changer();
    }//GEN-LAST:event_langKeyReleased

    private void catKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catKeyReleased
        changer();
    }//GEN-LAST:event_catKeyReleased

    private void prKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prKeyReleased
       changer();
    }//GEN-LAST:event_prKeyReleased

    private void pubdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pubdMouseClicked
       
    }//GEN-LAST:event_pubdMouseClicked

    private void pubdComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_pubdComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_pubdComponentAdded

    private void pubdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pubdMouseEntered
 
    }//GEN-LAST:event_pubdMouseEntered

    private void pubdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pubdKeyPressed
          
    }//GEN-LAST:event_pubdKeyPressed

    private void pubdInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_pubdInputMethodTextChanged
       
    }//GEN-LAST:event_pubdInputMethodTextChanged

    private void pubdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pubdFocusLost
        changer();
    }//GEN-LAST:event_pubdFocusLost

    private void pubdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pubdKeyTyped
        
    }//GEN-LAST:event_pubdKeyTyped

    private void pubdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pubdFocusGained
        pubd.setEnabled(false);
        
    }//GEN-LAST:event_pubdFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            this.demo();
        } catch (ParseException ex) {
            Logger.getLogger(Add_Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

         public void setnll(){
     
            ISBN.setText(null);
               name1.setText(null);
                 pages.setText(null);
                     qty.setText(null);
                        lang.setText(null);
                             cat.setText(null);
                               pr.setText(null);
                                pubd.setDate(null);
     }  
    public void changer(){
    JTextField pubd=(JTextField)this.pubd.getDateEditor().getUiComponent();
         String dat = pubd.getText();
        System.out.println(dat);
      if (!ISBN.getText().isEmpty() && !name1.getText().isEmpty()&&!pages.getText().isEmpty()&& !lang.getText().isEmpty()&&!cat.getText().isEmpty()&&!pr.getText().isEmpty()&&!dat.equalsIgnoreCase("")){
             add.setEnabled(true);
           
         }
         else {
               add.setEnabled(false);
           
         }
     
     }
    public void demo() throws ParseException{
    
        String d = "Nov 14, 2015";
        ISBN.setText("9789555116657");
        name1.setText("Mystery of three deaths");
       JTextField pubd=(JTextField)this.pubd.getDateEditor().getUiComponent();
        pubd.setText(d);
        qty.setText("50");
        lang.setText("Sinhala");
        pages.setText("270");
        pr.setText("370.50");
        cat.setText("Novel");
        changer();
        
    
    }
    
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Books().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ISBN;
    private javax.swing.JButton add;
    private javax.swing.JTextField cat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lang;
    private javax.swing.JTextField name1;
    private javax.swing.JTextField pages;
    private javax.swing.JTextField pr;
    private com.toedter.calendar.JDateChooser pubd;
    private javax.swing.JTextField qty;
    // End of variables declaration//GEN-END:variables
}
